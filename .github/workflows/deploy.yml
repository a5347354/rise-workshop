name: deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Test
        run: go test ./... -v -cover

  deploy:
    name: Docker login, build, and push
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.RISE_GCP_PROJECT_ID }}
      REGISTRY: us-central1
      REPOSITORY: us
      IMAGE: main
      DOCKER_FILE_PATH: build/dockerfile/Dockerfile

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v0.6.0
        with:
          credentials_json: '${{ secrets.RISE_GCP_CREDENTIALS }}'
          token_format: 'access_token'

      - name: Docker delete
        run: |-
          gcloud artifacts docker images delete "$REGISTRY-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE"
        continue-on-error: true

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: '${{ env.REGISTRY }}-docker.pkg.dev'
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: '${{ env.DOCKER_FILE_PATH }}'
          tags: '${{ env.REGISTRY }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}'
          push: true
          cache-from: type=gha
          cache-to: type=gha

      - name: Deploy Docker image
        run: |-
          gcloud config set run/region $REGISTRY \
            && gcloud run deploy ${{ env.PROJECT_ID }} --image "$REGISTRY-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:${{ github.sha }}" --region $REGISTRY --platform managed
    needs: [test]
